@page "/order"
@using Microsoft.JSInterop
@inject IJSRuntime JsRuntime
<h3>MilkshakeComponent</h3>
@if (orderResult != null)
{
    <p>@orderResult</p>
}
<EditForm Model="order" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Order Name:</label>
        <InputText @bind-Value="order.Name"></InputText>
    </div>
    <div>
        <label>Milkshake:</label>
        <select id="milkshakeSelect" @onchange="HandleMilkshakeChange">
            @foreach (var milkshake in milkshakeTypes)
            {
                <option value="@milkshake.Key">@milkshake.Value</option>
            }
        </select>

    </div>
    <div>
        <label>Milkshake Size:</label>
        <select id="milkshakeSize" @onchange="HandleMilkshakeSizeChange">
            @foreach (var size in milkshakeSizes)
            {
                <option value=@size.Key>@size.Value</option>
            }
        </select>

    </div>
    <div>
        <label>Quantity:</label>
        <InputNumber @bind-Value="order.Quantity"></InputNumber>
    </div>
    <div>
        <label>Optional: Whipped cream?</label>
        <InputCheckbox @bind-Value="order.WhippedCream"></InputCheckbox>
    </div>
    <div>
        <button class="btn btn-primary" type="submit">Order</button>
    </div>
</EditForm>

@code {
    private OrderModel order = new OrderModel();
    private Dictionary<int, string> milkshakeTypes = new Dictionary<int, string>();
    private Dictionary<int, string> milkshakeSizes = new Dictionary<int, string>();
    private string orderResult;

    public MilkshakeComponent()
    {
        milkshakeTypes.Add(1, "Chocolate Shake");
        milkshakeTypes.Add(2, "Vanilla Shake");
        milkshakeTypes.Add(3, "Strawberry Shake");

        milkshakeSizes.Add(1, "Small");
        milkshakeSizes.Add(2, "Medium");
        milkshakeSizes.Add(3, "Large");
    }


    private void HandleMilkshakeChange(ChangeEventArgs e)
    {
        order.MilkshakeType = int.Parse(e.Value.ToString());
    }
    private void HandleMilkshakeSizeChange(ChangeEventArgs e)
    {
        order.MilkshakeSize = int.Parse(e.Value.ToString());
    }
    private void HandleValidSubmit()
    {
        string milkshakeType = milkshakeTypes[order.MilkshakeType];
        string milkshakeSize = milkshakeSizes[order.MilkshakeSize];
        orderResult = $"Order recieved, {milkshakeType} in a {milkshakeSize} size, amount orderd: {order.Quantity} whipped cream: {order.WhippedCream}";
        JsRuntime.InvokeAsync<object>("resetForm", new object[0]);
    }

}
